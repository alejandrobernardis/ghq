name: test
on:
  push:
    branches:
    - "**"
  pull_request: {}
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macOS-latest
        - windows-latest
    steps:
    - name: setup go
      uses: actions/setup-go@v1
      with:
        go-version: 1.x
    - name: checkout
      uses: actions/checkout@v1
    - name: lint
      run: |
        GOBIN=$(pwd)/bin go install golang.org/x/lint/golint@latest
        bin/golint -set_exit_status ./...
      if: "matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'"
    - name: test
      run: go test -coverprofile coverage.out -covermode atomic ./...
      if: "matrix.os == 'macOS-latest' || matrix.os == 'windows-latest'"
    - name: launchable
      run: |
        pip3 install --user --upgrade more_itertools launchable~=1.0
        launchable record build --name $GITHUB_RUN_ID --source .
        GOBIN=$(pwd)/bin go install github.com/jstemmer/go-junit-report@latest
        go test -v -coverprofile coverage.out -covermode atomic ./... | bin/go-junit-report > report.xml
        launchable record tests --build $GITHUB_RUN_ID go-test .
      env:
        LAUNCHABLE_TOKEN: ${{ secrets.LAUNCHABLE_TOKEN }}
      if: "matrix.os == 'ubuntu-latest'"
    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        github-token: ${{ secrets.github_token }}
        path-to-profile: coverage.out
        parallel: true
        job-number: ${{ strategy.job-index }}

  finish:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: finish coverage report
      uses: shogo82148/actions-goveralls@v1
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
